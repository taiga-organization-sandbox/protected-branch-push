name: ⭐️Update Version via GitHub App

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version to set in package.json'
        required: true

jobs:
  update_version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Get Token
      id: get_workflow_token
      uses: perter-murray/workflow-application-token-action@v3.0.0
      with:
        app_id: ${{ vars.GH_APP_ID }}
        private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      
    - name: Checkout repository
      id: checkout_repo
      uses: actions/checkout@v4
      with: 
        token: ${{ steps.get_workflow_token.outputs.token }}

    - name: Check if version already exists
      id: check_version
      run: |
        echo "Checking for version: v${{ github.event.inputs.new_version }}"
        git fetch --tags
        if git rev-parse "refs/tags/v${{ github.event.inputs.new_version }}" >/dev/null 2>&1; then
          echo "Version v${{ github.event.inputs.new_version }} already exists."
          exit 1
        else
          echo "Version v${{ github.event.inputs.new_version }} does not exist."
        fi

    - name: Update version in package.json
      id: update_package_json
      if: steps.checkout_gh_actions.conclusion == 'success'
      run: |
        jq --arg new_version "${{ github.event.inputs.new_version }}" '.version = $new_version' package.json > tmp.json && mv tmp.json package.json

    - name: Commit and push changes
      id: commit_push
      if: steps.update_package_json.conclusion == 'success'
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git add package.json
        git commit -m "Update version of package.json"
        git push
          
    # Push a new tag from main branch for deployment
    - name: Push a new tag for deployment
      if: steps.approve_merge_pr.conclusion == 'success'
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout main
        git pull origin main
        git tag v${{ github.event.inputs.new_version }}
        git push origin v${{ github.event.inputs.new_version }}